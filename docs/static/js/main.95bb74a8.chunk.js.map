{"version":3,"sources":["App.js","index.js"],"names":["App","useState","text","setText","timeRemaining","setTimeRemaining","isTimeRunning","setIsTimeRunning","wordCount","setWordCount","inputRef","useRef","useEffect","setTimeout","time","trim","split","filter","word","length","calculateWordCount","className","onChange","e","value","target","disabled","ref","onClick","current","focus","ReactDOM","render","document","getElementById"],"mappings":"oLAoEeA,MAhEf,WACE,IAEA,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0CF,mBAHvB,GAGnB,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACA,EAAkCN,mBAAS,GAA3C,mBAAOO,EAAP,KAAkBC,EAAlB,KAEMC,EAAWC,iBAAO,MAoCxB,OAXAC,qBAAU,WACJN,GAAiBF,EAAgB,EACnCS,YAAW,WACTR,GAAiB,SAACS,GAAD,OAAUA,EAAO,OACjC,KACwB,IAAlBV,IATXG,GAAiB,GACjBE,EAfF,SAA4BP,GAE1B,OADiBA,EAAKa,OAAOC,MAAM,KACnBC,QAAO,SAACC,GAAD,MAAmB,KAATA,KAAaC,OAajCC,CAAmBlB,OAY/B,CAACE,EAAeE,IAGjB,qBAAKe,UAAU,UAAf,SACE,sBAAKA,UAAU,MAAf,UACE,mDACA,0BACEC,SAvCR,SAAsBC,GACpB,IAAQC,EAAUD,EAAEE,OAAZD,MACRrB,EAAQqB,IAsCFA,MAAOtB,EACPwB,UAAWpB,EACXqB,IAAKjB,IAEP,kDAAqBN,KACrB,wBAAQwB,QAnCd,WACErB,GAAiB,GACjBF,EArBiB,GAsBjBF,EAAQ,IACRO,EAASmB,QAAQH,UAAW,EAC5BhB,EAASmB,QAAQC,SA8BgBJ,SAAUpB,EAAvC,mBAGA,8CAAiBE,WC1DzBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.95bb74a8.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const START_TIME = 7;\n\n  const [text, setText] = useState(\"\");\n  const [timeRemaining, setTimeRemaining] = useState(START_TIME);\n  const [isTimeRunning, setIsTimeRunning] = useState(false);\n  const [wordCount, setWordCount] = useState(0);\n\n  const inputRef = useRef(null);\n\n  function handleChange(e) {\n    const { value } = e.target;\n    setText(value);\n  }\n\n  function calculateWordCount(text) {\n    const wordsArr = text.trim().split(\" \");\n    return wordsArr.filter((word) => word !== \"\").length;\n  }\n\n  function startClock() {\n    setIsTimeRunning(true);\n    setTimeRemaining(START_TIME);\n    setText(\"\");\n    inputRef.current.disabled = false;\n    inputRef.current.focus();\n  }\n\n  function endGame() {\n    setIsTimeRunning(false);\n    setWordCount(calculateWordCount(text));\n  }\n\n  useEffect(() => {\n    if (isTimeRunning && timeRemaining > 0) {\n      setTimeout(() => {\n        setTimeRemaining((time) => time - 1);\n      }, 1000);\n    } else if (timeRemaining === 0) {\n      endGame();\n    }\n    // eslint-disable-next-line\n  }, [timeRemaining, isTimeRunning]);\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"app\">\n        <h1>Speed typing game</h1>\n        <textarea\n          onChange={handleChange}\n          value={text}\n          disabled={!isTimeRunning}\n          ref={inputRef}\n        />\n        <h4>Time reamining: {timeRemaining}</h4>\n        <button onClick={startClock} disabled={isTimeRunning}>\n          Start\n        </button>\n        <h1>Word count: {wordCount}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}